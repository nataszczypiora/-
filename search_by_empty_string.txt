Antipattern search_by_empty_string
&lt;main requestType="create"&gt; &lt;CATEGORY_ID&gt;5&lt;/CATEGORY_ID&gt; &lt;NAME&gt;Position Adhoc&lt;/NAME&gt; &lt;VIEW_CONFIG&gt; &lt;ViewConfig&gt; &lt;localization value="true"&gt;&lt;/localization&gt; &lt;DataSource dataFormat="XML" hasTotalRow="false" nodeDataFieldWidth="200" treeNodeDataField="0"&gt;&lt;/DataSource&gt; &lt;Ribbon&gt; &lt;Funds container="com.ssc.cfi.ribbon.fundbrowser.FundBrowser" enabled="true" entity="Portfolio" exclusiveGroup="" label="Portfolios" visible="true"&gt; **&lt;List** enabled="true" fundFilterState="ACCT" label="Portfolio" maxSelectionAllowed="1000" showActiveCloseFunds="false" showManager="false"&gt;&lt;/List&gt; &lt;AllFunds enabled="true" entityName="AllFunds" showActiveCloseFunds="false"&gt;&lt;/AllFunds&gt;
| select a.id, a.desc, a.serial, a.partno, a.maintact, a.lcnalc, a.datedue, a.intrem, a.lifetype, (select b.id from assets b where (b.maintact = a.maintact) and (b.aircraft_id = a.aircraft_id) and (b.inittype = "STRT") and (b.initlcnalc = a.lcnalc OR b.initlcnalc = "")) as parent from assets a where aircraft_id = 6;
Select Country: &lt;br /&gt; &lt;select id="countries"&gt; &lt;option value=""&gt;--&lt;/option&gt; &lt;?php $sql = "SELECT country, title FROM countries ORDER BY title ASC"; $rs = mysql_query($sql); while($row = mysql_fetch_array($rs)) { echo "&lt;option value=\"".$row['country']."\"&gt;".$row['title']."\n "; } ?&gt; &lt;/select&gt; Select City: &lt;br /&gt; &lt;select id="cities"&gt; &lt;option value=""&gt;Select one&lt;/option&gt; &lt;?php $sql = "SELECT country, title FROM cities ". "ORDER BY title ASC"; $rs = mysql_query($sql); while($row = mysql_fetch_array($rs)) { echo "&lt;option class=\"".$row['country']."\" value=\"".$row['title']."\"&gt;".$row['title']."\n "; } ?&gt; &lt;/select&gt;
$today = date('Y-m-d'); $sql = "SELECT * FROM table WHERE day1 = '$today' AND country = 'India' OR day2 = '$today' AND country = 'India' OR day3 = '$today' AND country = 'India' OR day4 = '$today' AND country = 'India' OR day5 = '$today' AND country = 'India' OR day6 = '$today' AND country = 'India' OR day7 = '$today' AND country = 'India' OR day8 = '$today' AND country = 'India' OR day9 = '$today' AND country = 'India' OR day10 = '$today' AND country = 'India'"; if($_POST!=""){ $mydate = mysql_real_escape_string($_POST['datepicker']); if($mydate!=""){ $sql = "SELECT * FROM table WHERE day1 = '$mydate' AND country = 'India' OR day2 = '$mydate' AND country = 'India' OR day3 = '$mydate' AND country = 'India' OR day4 = '$mydate' AND country = 'India' OR day5 = '$mydate' AND country = 'India' OR day6 = '$mydate' AND country = 'India' OR day7 = '$mydate' AND country = 'India' OR day8 = '$mydate' AND country = 'India' OR day9 = '$mydate' AND country = 'India' OR day10 = '$mydate' AND country = 'India'"; } } ....... ........ echo"...... ...... ......
| select d.name, l.* from Limits l left join domains d on l.id =d.id where l.limit_name = "expiration" and d.name != "" order by value
| SELECT "D"."Imię", "D"."Nazwisko", "D"."Data badania", "D"."Rodzaj auta", "D"."Obszar badany", "D"."Jednostka kierująca 1", "D"."Jednostka kierująca 2" FROM "Dane" AS "D", "Szukanie" AS "S" WHERE "D"."Data badania" BETWEEN "S"."Data_od" AND "S"."Data_do" AND IF "S"."Imię" != "" THEN "D"."Imię" = "S"."Imię" AND IF "S"."Nazwisko" != THEN "D"."Nazwisko" = "S"."Nazwisko" AND IF "S"."Rodzaj auta" != "" THEN "D"."Rodzaj auta" = "S"."Rodzaj auta" AND IF "S"."Obszar badany" != "" THEN "D"."Obszar badany" = "S"."Obszar badany" AND IF "S"."Jednostka kierująca 1" != "" THEN "D"."Jednostka kierująca 1" = "S"."Jednostka kierująca 1" AND IF "S"."Jednostka kierująca 2" != "" THEN "D"."Jednostka kierująca 2" = "S"."Jednostka kierująca 2" AND END IF
function db_prepare_input($string) { if (is_string($string)) { return trim(stripslashes($string)); } elseif (is_array($string)) { reset($string); while (list($key, $value) = each($string)) { $string[$key] = db_prepare_input($value); } return mysql_real_escape_string($string); } else { return mysql_real_escape_string($string); } } $pricefrom_key = db_prepare_input(number_format($_GET['pricefrom'], 4, '.', '')); $priceto_key = db_prepare_input(number_format($_GET['priceto'], 4, '.', '')); // Price Range if (!empty($_GET['pricefrom']) &amp;&amp; !empty($_GET['priceto'])) { $price_range = " having price &gt;= ".$pricefrom_key." and price &lt;= ".$priceto_key; } elseif(empty($_GET['pricefrom']) &amp;&amp; !empty($_GET['priceto'])) { $price_range = " having price &gt;= 0 and price &lt;= ".$priceto_key; } elseif(!empty($_GET['pricefrom']) &amp;&amp; empty($_GET['priceto'])) { $price_range = " having price &gt;= ".$pricefrom_key; } elseif(!empty($_GET['pricefrom']) &amp;&amp; !empty($_GET['priceto'])) { $price_range = ""; } $catglobal_sql = "select p.blog_id, p.global_category_id, p.products_id, p.products_currency, p.products_type, p.products_name, p.products_description, p.products_quantity, p.products_model, p.products_image, p.products_price, p.products_date_added, p.products_last_modified, p.products_date_available, p.products_weight, p.products_status, p.products_tax_class_id, p.manufacturers_id, p.products_ordered, p.specials_new_products_price, p.specials_date_added, p.specials_last_modified, p.expires_date, p.date_status_change, p.status, p.display_product, case when (p.specials_new_products_price &gt; 0 or p.specials_new_products_price != 0000-00-00 and p.expires_date &gt; Now() and p.status != 0) then p.specials_new_products_price else p.products_price end price from ".TABLE_GLOBAL_PRODUCTS." p INNER JOIN ".TABLE_STORES." s ON s.blog_id = p.blog_id where MATCH (p.products_name,p.products_description) AGAINST ('%".$search_key."%') OR p.products_name like '%".$search_key."%' and s.countries_id = '168' ".$search_cat." and p.display_product = '1' and p.products_status = '1' ".$price_range." order by p.products_date_added DESC, p.products_name";
| SELECT G.GROUP_ID "GROUP_ID", G.GROUP_NAME "GROUP_NAME", IF (GF.GENDER IS NULL || GF.GENDER = "" , "NONE", GF.GENDER) "GENDER", IF (GF.AGE_FROM IS NULL || GF.AGE_FROM = "" , "NONE", GF.AGE_FROM) "AGE_FROM", IF (GF.AGE_TO IS NULL || GF.AGE_TO = "" , "NONE", GF.AGE_TO) "AGE_TO", IF (GF.MOBILE_EXIST IS NULL || GF.MOBILE_EXIST = "" , "NONE", GF.MOBILE_EXIST) "MOBILE_EXIST", IF (CR.COUNTRY_NAME IS NULL || CR.COUNTRY_NAME = "" , "NONE", CR.COUNTRY_NAME) "COUNTRY_NAME", IF (CSR.STATE_NAME IS NULL || CSR.STATE_NAME = "" , "NONE", CSR.STATE_NAME) "STATE", IF (GF.EMAIL_EXIST IS NULL || GF.EMAIL_EXIST = "" , "NONE", GF.EMAIL_EXIST) "EMAIL_EXIST", IF (GF.INCLUDE_BUYER_ID IS NULL || GF.INCLUDE_BUYER_ID = "" , "NONE", GF.INCLUDE_BUYER_ID) "INCLUDE_BUYER", IF (GF.EXCLUDE_BUYER_ID IS NULL || GF.EXCLUDE_BUYER_ID = "" , "NONE", GF.EXCLUDE_BUYER_ID) "EXCLUDE_BUYER" FROM MOB_GROUP G LEFT OUTER JOIN MOB_GROUP_FORMULA GF ON (G.GROUP_ID = GF.GROUP_ID) LEFT OUTER JOIN MOB_COUNTRY_REF CR ON (GF.COUNTRY = CR.COUNTRY_ID) LEFT OUTER JOIN MOB_COUNTRY_STATE_REF CSR ON (CR.COUNTRY_ID = CSR.COUNTRY_ID)
| SELECT WallsMaster.StreetAddress, WallsMaster.Zip, WallsMaster.Direction, WallsMaster.LotInfo FROM WallsMaster WHERE ( ((WallsMaster.Zip) Like "*" &amp; [Forms]![Search_Form]![Zip_Search] Or (WallsMaster.Zip)="" Or (WallsMaster.Zip) Is Null) AND ((WallsMaster.Direction) Like "*" &amp; [Forms]![Search_Form]![Direction_Search] Or (WallsMaster.Direction)="" Or (WallsMaster.Direction) Is Null) AND ((WallsMaster.LotInfo) Like "*" &amp; [Forms]![Search_Form]![LotInfo_Search] Or (WallsMaster.LotInfo)="" Or (WallsMaster.LotInfo) Is Null) ) ;
import pandas as pd import pandasql as pdsql def pysql(q): return pdsql.sqldf(q, globals()) type_table = { "type_id" : [101, 102], "type_name" : ["Go", "Stop"] } types = pd.DataFrame(type_table) print 'Table "types":' print types events = pd.DataFrame( { "type" : [101, 101, 102, 101, 102, 102], "time" : [1, 2, 3, 4, 5, 6], "success" : [0, 0, 1, 1, 1, 1] }) print '\nTable "events":' print events query = """SELECT t.type_name, count(e.success) as event_count FROM types AS t, events AS e WHERE t.type_id = e.type GROUP BY t.type_name; """ print "\nQuery:" print query print "Result:" print pysql(query)
public class SelectActivity extends ActionBarActivity { JSONArray jsonArray = null; TextView tv_select; ProgressDialog pDialog; JSONParser jsonParser = new JSONParser(); @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_select); tv_select =(TextView)findViewById(R.id.tv_select); new LoadAllStudents().execute(); } @Override public boolean onCreateOptionsMenu(Menu menu) { // Inflate the menu; this adds items to the action bar if it is present. getMenuInflater().inflate(R.menu.menu_select, menu); return true; } class LoadAllStudents extends AsyncTask&lt;String,String,String&gt; { @Override protected void onPreExecute() { super.onPreExecute(); pDialog = new ProgressDialog(SelectActivity.this); pDialog.setMessage("Loading data. Please wait..."); pDialog.setIndeterminate(false); pDialog.setCancelable(false); pDialog.show(); } @Override protected void onPostExecute(String s) { super.onPostExecute(s); if(pDialog!=null) { pDialog.dismiss(); pDialog =null; } } @Override protected String doInBackground(String... args) { // List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;(); JSONObject json = jsonParser.getJSONFromUrl(app_url); String studString =""; try { JSONArray student = json.getJSONArray("data"); for (int i= 0;i&lt;student.length();i++) { JSONObject json1 =null; try { json1 = student.getJSONObject(i); studString = studString+ "Name"+ json1.getString("name")+"\n"+"Result"+json1.getString("result")+"\n"; }catch (JSONException e) { e.printStackTrace(); } } tv_select.setText(studString); } catch (JSONException e) { e.printStackTrace(); } return null; } } @Override public boolean onOptionsItemSelected(MenuItem item) { // Handle action bar item clicks here. The action bar will // automatically handle clicks on the Home/Up button, so long // as you specify a parent activity in AndroidManifest.xml. int id = item.getItemId(); //noinspection SimplifiableIfStatement if (id == R.id.action_settings) { return true; } return super.onOptionsItemSelected(item); } }
select name="select3" id="select3" value="" onChange=" var x=this.options[this.selectedIndex].value; var k=document.form3.chk_list_hidden.value; if(this.selectedIndex!=0){ k=x; document.location.replace(window.location.href='&lt;? $uri=$_SERVER['REQUEST_URI']; echo $uri.'&amp;selected=';?&gt;'+k); }"
&lt;form action="" name="training" id="training"&gt; &lt;select name="city"&gt; &lt;option value="ostrava"&gt;Ostrava&lt;/option&gt; &lt;/select&gt; &lt;input type="text" name="date_start" id="date_start" value="" /&gt; &lt;input type="submit" /&gt; &lt;/form&gt;
| SELECT Col1, Col2, Col3,.... FROM table Where Employee = "" OR Department = "" OR Date_Hired BETWEEN "" AND ""
select(ng-model="data.elId", ng-change="load()", ng-options="e._id as e.name for e in options") option(value="") - select a mashup -
... sqltransaction = connection.begintransaction INSERT into table1 ... for i=1 to x ... INSERT into table2 ... SELECT FROM table3 ... INSERT into table3 ... next i sqltransaction.commit ... Private Sub salveazaCerereaDeOferta() If checkCompletion() = 1 Then Dim conn As New SqlConnection(My.Settings.GestiuneService2012_beSQLConnectionString) conn.Open() Dim sqlTrans As SqlTransaction = conn.BeginTransaction() Try Dim cmdInsertCerereOferta As SqlCommand = conn.CreateCommand cmdInsertCerereOferta.Transaction = sqlTrans cmdInsertCerereOferta.CommandText = "INSERT INTO ListaCereriOferte (IDFurnizor,NrCerereOferta,DataCerereOferta,IDModTransCerereOferta,ObservatiiCerereOferta)" + _ " VALUES (@IDFurnizor,@NrCerereOferta,@DataCerereOferta,@IDModTransCerereOferta,@ObservatiiCerereOferta);" + _ " SELECT SCOPE_IDENTITY();" cmdInsertCerereOferta.Parameters.Add("@IDFurnizor", SqlDbType.Int).Value = CInt(Me.t_IDFurnizor.Text) cmdInsertCerereOferta.Parameters.Add("@NrCerereOferta", SqlDbType.Int).Value = CInt(Me.t_NumarCerereOferta.Text) cmdInsertCerereOferta.Parameters.Add("@DataCerereOferta", SqlDbType.Date).Value = CDate(Me.t_DataCerereOferta.Text) cmdInsertCerereOferta.Parameters.Add("@IDModTransCerereOferta", SqlDbType.Int).Value = 1 cmdInsertCerereOferta.Parameters.Add("@ObservatiiCerereOferta", SqlDbType.NVarChar).Value = Me.t_ObservatiiCerereOferta.Text Dim IDCerereOferta As Integer = cmdInsertCerereOferta.ExecuteScalar Dim ListaPieseCerereOferta = Me.CerereOfertaDataSet.ListaPieseCerereOferta.AsEnumerable Dim ListaNecesarePePiesa = Me.CerereOfertaDataSet.NecesarePeOferta.AsEnumerable Dim PieseOferta = From q In ListaPieseCerereOferta _ Select q Dim cantTotalaPiese = Aggregate q In ListaPieseCerereOferta _ Into Sum(q.Cantitate) Dim salvat As Integer = 0 Dim curIDPiesaDeSchimb As Integer For Each piesa In PieseOferta curIDPiesaDeSchimb = piesa.IDPiesaDeSchimb Dim NecesarePePiesa = From p In ListaNecesarePePiesa _ Select p _ Order By p.IDNecesar Descending Dim curIDNecesar As Integer For Each necesar In NecesarePePiesa curIDNecesar = necesar.IDNecesar Dim cmdInsertPiesaCerereOferta As SqlCommand = conn.CreateCommand cmdInsertPiesaCerereOferta.Transaction = sqlTrans cmdInsertPiesaCerereOferta.CommandText = "INSERT INTO CereriOferte (IDCerereOferta,IDPiesaDeSchimb,Cantitate,UM,Observatii)" + _ " VALUES (@IDCerereOferta,@IDPiesaDeSchimb,@Cantitate,@UM,@Observatii);" + _ " SELECT SCOPE_IDENTITY();" cmdInsertPiesaCerereOferta.Parameters.Add("@IDCerereOferta", SqlDbType.Int) cmdInsertPiesaCerereOferta.Parameters.Add("@IDPiesaDeSchimb", SqlDbType.Int) cmdInsertPiesaCerereOferta.Parameters.Add("@Cantitate", SqlDbType.Float) cmdInsertPiesaCerereOferta.Parameters.Add("@UM", SqlDbType.NVarChar) cmdInsertPiesaCerereOferta.Parameters.Add("@Observatii", SqlDbType.NVarChar) Dim cmdInsertNecesarCerereOferta As SqlCommand = conn.CreateCommand cmdInsertNecesarCerereOferta.Transaction = sqlTrans cmdInsertNecesarCerereOferta.CommandText = "INSERT INTO NecesareCereriOferte (IDPiesaNecesar,IDPiesaCerereOferta)" + _ " VALUES (@IDPiesaNecesar,@IDPiesaCerereOferta)" cmdInsertNecesarCerereOferta.Parameters.Add("@IDPiesaNecesar", SqlDbType.Int) cmdInsertNecesarCerereOferta.Parameters.Add("@IDPiesaCerereOferta", SqlDbType.Int) Select Case curIDNecesar Case 0 cmdInsertPiesaCerereOferta.Parameters("@IDCerereOferta").Value = IDCerereOferta cmdInsertPiesaCerereOferta.Parameters("@IDPiesaDeSchimb").Value = curIDPiesaDeSchimb cmdInsertPiesaCerereOferta.Parameters("@Cantitate").Value = 1 cmdInsertPiesaCerereOferta.Parameters("@UM").Value = piesa.UM cmdInsertPiesaCerereOferta.Parameters("@Observatii").Value = "" For i = 1 To necesar.Cantitate cmdInsertPiesaCerereOferta.ExecuteNonQuery() salvat += 1 Me.tsspb_SalvareCerereOferta.Value = CInt(100 * salvat / cantTotalaPiese) Next Case Is &gt; 0 Me.PieseNecesarePeOfertaTableAdapter.Fill(Me.CerereOfertaDataSet.PieseNecesarePeOferta, curIDNecesar, curIDPiesaDeSchimb, CInt(necesar.Cantitate)) Dim ListaPieseNecesarePeOferta = Me.CerereOfertaDataSet.PieseNecesarePeOferta.AsEnumerable Dim PieseNecesareOferta = From q In ListaPieseNecesarePeOferta _ Select q For i = 1 To necesar.Cantitate cmdInsertPiesaCerereOferta.Parameters("@IDCerereOferta").Value = IDCerereOferta cmdInsertPiesaCerereOferta.Parameters("@IDPiesaDeSchimb").Value = curIDPiesaDeSchimb cmdInsertPiesaCerereOferta.Parameters("@Cantitate").Value = 1 cmdInsertPiesaCerereOferta.Parameters("@UM").Value = piesa.UM cmdInsertPiesaCerereOferta.Parameters("@Observatii").Value = "" Dim insertedIDPiesaCerereOferta As Integer = cmdInsertPiesaCerereOferta.ExecuteScalar cmdInsertNecesarCerereOferta.Parameters("@IDPiesaNecesar").Value = PieseNecesareOferta(i - 1).IDPiesaNecesar cmdInsertNecesarCerereOferta.Parameters("@IDPiesaCerereOferta").Value = insertedIDPiesaCerereOferta cmdInsertNecesarCerereOferta.ExecuteNonQuery() salvat += 1 Me.tsspb_SalvareCerereOferta.Value = CInt(100 * salvat / cantTotalaPiese) Next End Select Next Next sqlTrans.Commit() MsgBox("Cererea de oferta a fost salvata.") Catch ex As Exception Try sqlTrans.Rollback() MsgBox("A aparut o eroare." + vbNewLine + ex.ToString + vbNewLine + "RollBack success. Cererea nu a fost salvata.") Catch ex2 As SqlException If Not sqlTrans.Connection Is Nothing Then MsgBox("An exception of type " &amp; ex2.GetType().ToString() &amp; _ " was encountered while attempting to roll back the transaction.") End If End Try Finally If conn.State = ConnectionState.Open Then conn.Close() End Try Else MsgBox("Nu ai completat integral cererea de oferta!") End If End Sub
function buildfilter(){ if($_GET['filter']=="clear" || $_GET['filt_age']&lt;&gt;""){$_SESSION['filter']="";} if($_SESSION['filter']==""){$query="SELECT `personal_assistant`.*,`hobby`.* FROM `personal_assistant`,`hobby`,`citizen`,`citizenhobby` WHERE `personal_assistant`.`status`='active'";} if($_GET['filt_car']=="1"){$query.=" AND `personal_assistant`.`licence`='1' AND `personal_assistant`.`car`='1'";} if($_GET['filt_age']&lt;&gt;"any" AND $_GET['filt_age']&lt;&gt;""){ $today=date ( 'Y-m-j' , time()); $ages = explode("-", $_GET['filt_age']); $ages[0]=strtotime ('-'.$ages[0].' year', strtotime($today)); $ages[1]=strtotime ('-'.$ages[1].' year', strtotime($today)); $query.=" AND `personal_assistant`.`dob`&gt;='".$ages[1]."' AND `personal_assistant`.`dob`&lt;='".$ages[0]."'"; } if($query&lt;&gt;""){ $query.=" AND (`personal_assistant`.`id`=`hobby`.`pa_id` AND `hobby`.`hobby_option_id`=`citizenhobby`.`hobby_option_id` AND `citizen`.`id`=`citizenhobby`.`ci_id` AND `citizen`.`id`='".$_GET['edcit']."')"; $query.=" AND (`personal_assistant`.`id`=`activity`.`pa_id` AND `activity`.`activity_option_id`=`citizenactivity`.`activity_option_id` AND `citizen`.`id`=`citizenactivity`.`ci_id` AND `citizen`.`id`='".$_GET ['edcit']."')"; } if($query==""){$query=$_SESSION['filter'];} if($_SESSION['filter']==""){$_SESSION['filter']=$query;} return $query; }
| SELECT SQL_CALC_FOUND_ROWS `last`,`first`,`mate`,`address` FROM `homeownersnew` WHERE `last` LIKE "s%" AND `address` != "" LIMIT ' . (($pagination-&gt;get_page() - 1) * $records_per_page) . ', ' . $records_per_page . '';
| SELECT * FROM `myTable` WHERE `MyField` != "";
| SELECT * FROM project WHERE parent_id = ""
| SELECT sh.dropid, COUNT(DISTINCT IF(sh2.`SentDate` IS NOT NULL, sh2.`subid`, NULL)) AS sentCount, COUNT(DISTINCT IF(sh2.`Open` = 1, sh2.`subid`, NULL)) AS openCount, COUNT(DISTINCT IF(sh2.`Click` = 1, sh2.`subhistid`, NULL)) AS clickCount, COUNT(DISTINCT IF(sh2.`Bounced` = 1, sh2.`subid`, NULL)) AS bounceCount, COUNT(DISTINCT IF(sh2.`Unsubscribed` = 1, sh2.`subid`, NULL)) AS unsubCount, COUNT(DISTINCT IF(sh2.`Abuse` = 1, sh2.`subid`, NULL)) AS abuseCount FROM subscriberhistory sh INNER JOIN subscriberhistory sh2 ON sh.subid = sh2.subid WHERE sh.SentDate &gt;= '#runDate# #lastRunTime#' AND sh.dropid IS NOT NULL AND sh.dropid != "" OR (sh.SentDate IS NULL AND sh.OpenDate &gt;= '#runDate# #lastRunTime#') OR (sh.SentDate IS NULL AND sh.ClickDate &gt;= '#runDate# #lastRunTime#') OR (sh.SentDate IS NULL AND sh.UnsubscribeDate &gt;= '#runDate# #lastRunTime#') OR (sh.SentDate IS NULL AND sh.BouncedDate &gt;= '#runDate# #lastRunTime#') OR (sh.SentDate IS NULL AND sh.AbuseDate &gt;= '#runDate# #lastRunTime#') GROUP BY dropid ORDER BY sentCount DESC
| SELECT SQL_CALC_FOUND_ROWS `products_stock`.`products_id`, `products_stock`.`products_stock_attributes`, `products_stock`.`products_stock_quantity`, `products`.`manufacturers_id`, `products_description`.`products_name` FROM `products_stock` LEFT JOIN `products` ON `products_stock`.`products_id` = `products`.`products_id` LEFT JOIN `products_description` ON `products_stock`.`products_id` = `products_description`.`products_id` LEFT JOIN `products_to_categories` ON `products_stock`.`products_id` = `products_to_categories`.`products_id` WHERE `products_stock`.`products_stock_quantity` &gt;=3 AND `products`.`products_status` = 1 AND ISNULL(`products`.`products_image`) = false AND `products`.`products_image` != "" AND EXISTS( select * from `allegro` where `products_stock`.`products_id` = `allegro`.`product_id` and `allegro`.`attributes` = `products_stock`.`products_stock_attributes` ) = false
SELECT orig_string.message_seq_id, xml_layer_1.unit_srl, xml_layer_2.AB_Type FROM ( SELECT xml.message_seq_id, XMLTYPE( xml.xml_messg_text ) AS xml_messg_text FROM ( SELECT 1001 AS message_seq_id, RPAD(Q'#&lt;location_data unit_srl="MLRR-1" time_marker="02-04-2015 21:54:42" location_number="2335350"&gt;&lt;RunData AB_Type="Rezoned" mr_cod="9982349482-2422422234" Timing="02-04-2015 21:54:42" Handle="L1L_upperband" LongCount="82742288322983299222759200000004" ClassTypeTest="HUCOHOTMMMWMM" Boc="242242" Closeout="LongOp" Founding="14" init_link="lls://rtg.ootir.orzz/prp"/&gt;#', 3888, ' ') || Q'#&lt;RunData AB_Type="Rezoned" mr_cod="9834398399934-39493943-###-09923049,0003-002,12" Timing="02-04-2015 21:54:42"#' AS xml_messg_text, TO_DATE('2015-02-04 21:06:00', 'YYYY-MM-DD HH24:MI:SS') AS create_date FROM DUAL UNION ALL SELECT 1002 AS message_seq_id, Q'#&lt;location_data unit_srl="UNTOUT-3" time_marker="02-05-2015 10:18:34" location_number="23422"&gt;&lt;RunData AB_Type="Rezoned" mr_cod="9234092349,03940388,748209,23" Timing="02-05-2015 10:18:34" Handle="L1L_upperband" ClassTypeTest="URCHTPH" Boc="3245" Closeout="LongOp" Founding="21" init_link="lls://rtg.ootir.orzz/prp"/&gt;&lt;RunData AB_Type="Rezoned" mr_cod="93488284983292492394242-####-0200234" Timing="02-05-2015 10:18:34" Handle="L1L_upperband" ClassTypeTest="BERDBP" Boc="6445" Closeout="LongOp" Founding="9453" init_link="lls://rtg.ootir.orzz/prp"/&gt;&lt;RunData AB_Type="Lopped" mr_cod="4537747565656565" Timing="02-05-2015 10:18:34" Handle="L1L_upperband" ClassTypeTest="HIUFDDU" Boc="3324" Closeout="LongOp" Founding="29" init_link="lls://rtg.ootir.orzz/prp"/&gt;&lt;/location_data&gt;#' AS xml_messg_text, TO_DATE('2015-02-05 09:31:23', 'YYYY-MM-DD HH24:MI:SS') AS create_date FROM DUAL UNION ALL SELECT 1003 AS message_seq_id, Q'#&lt;location_data unit_srl="LURET-22" time_marker="02-04-2015 15:34:55" location_number="1135461"&gt;&lt;RunData Timing="02-04-2015 15:34:55" Boc="5644" Closeout="ChpstHousTul" init_link="lls://rtg.ootir.orzz/prp" Dest=""/&gt;&lt;/location_data&gt;#' AS xml_messg_text, TO_DATE('2015-02-04 16:24:42', 'YYYY-MM-DD HH24:MI:SS') AS create_date FROM DUAL UNION ALL SELECT 1004 AS message_seq_id, Q'#&lt;location_data unit_srl="GBT-14" time_marker="02-04-2015 15:31:27" location_number="4395822"&gt;&lt;RunData AB_Type="Rezoned" mr_cod="5948573853085309485938094853098345" Timing="02-04-2015 15:31:27" Handle="L1L_upperband" ClassTypeTest="BTTXRCH" Boc="232" Closeout="LongOp" Founding="3" init_link="lls://rtg.ootir.orzz/prp"/&gt;&lt;/location_data&gt;#' AS xml_messg_text, TO_DATE('2015-02-04 16:35:37', 'YYYY-MM-DD HH24:MI:SS') AS create_date FROM DUAL ) xml WHERE LENGTH(xml.xml_messg_text) &lt; 4000 ) orig_string, XMLTABLE( '/location_data' PASSING orig_string.xml_messg_text COLUMNS unit_srl VARCHAR2(15) PATH '@unit_srl', OBJECT XMLTYPE PATH 'RunData' ) xml_layer_1, XMLTABLE( '/RunData' PASSING xml_layer_1.object COLUMNS AB_Type VARCHAR2(40) PATH '@AB_Type' ) xml_layer_2 ;
&lt;form id="search_form" method="POST" name="searchTeachers"&gt; &lt;fieldset&gt; &lt;div&gt; &lt;label for="mebook-category"&gt;Search teachers by:&lt;/label&gt; &lt;select name="teacher-category"&gt; &lt;option value=""&gt;All&lt;/option&gt; &lt;option value="school_name"&gt;School&lt;/option&gt; &lt;option value="school_board"&gt;School Board&lt;/option&gt; &lt;option value="country"&gt;Country&lt;/option&gt; &lt;option value="state"&gt;Province/State&lt;/option&gt; &lt;option value="city"&gt;City&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;input type="text" name="keyword-search" value="&lt;?php echo $keyword_search ?&gt;"&gt; &lt;/fieldset&gt; &lt;fieldset&gt; &lt;button type="submit" name="search" value="search"&gt;&lt;span&gt;Search&lt;/span&gt;&lt;/button&gt; &lt;/fieldset&gt; &lt;/form&gt;
| SELECT * FROM users u WHERE NOT EXISTS (SELECT 1 from users_classdetails uc WHERE u.id = uc.userID AND dateEntered &gt; DATE_SUB(NOW(),INTERVAL 3 YEAR) ) AND bestcontact = ""
select decode(CREATED_BY ,:APP_USER ,'&lt;img src="#IMAGE_PREFIX#edit.gif" alt=""&gt;' -- or your preferred image/hyperlink text ) EDITLINK --, your columns from ARTICLES --etc
| select * from table where column_1 is null or REPLACE(column_1," ","") = "";
| SELECT (( SELECT DISTINCT * FROM ( SELECT REPLACE(source_name, "+", "") AS name FROM events WHERE source_name!="" UNION SELECT REPLACE(target_name, "+", "") AS name FROM events WHERE target_name!="" ) myMissingAlias -- alias needed here ) AS player_name,
| SELECT member_id, TEXT FROM review WHERE TEXT != "" AND member_id = memberid ORDER BY DATE DESC LIMIT 2
SelectCommand="SELECT * FROM [Concerts] WHERE (([ShowDate] &amp;gt; @MON) AND ([ShowDate ] &amp;lt; @FRI))"&gt; &lt;SelectParameters&gt; &lt;asp:Parameter Name="MON" DefaultValue="" Type="DateTime" /&gt; &lt;asp:Parameter Name="FRI" DefaultValue="" Type="DateTime" /&gt; &lt;/SelectParameters&gt;

Statystyka ---
Poprawnie zklasyfikowanych: 15
Nie poprawnie zklasyfikowanych: 15
Procent poprawnych: 50%